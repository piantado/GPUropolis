This was a very sloppy, quick speed test on Aug 22 2013, to see how much slower things would run on the CPU. 

Looks like it's pretty much slower. On Boyle:
	CUDA takes about 17.5 seconds to do 1k samples on 10240 chains
	This takes about 120 seconds. 
	
	So its about 8x faster to use CUDA. But, the code has not been optimized for C, so that might be worth pursuing...
	
	Top run C: g++ src/main.cpp -O2 -o gpumcmc -I. -I.. && bash run-all.sh
	
	This is very heavily concentrated in f_output, so there maybe isn't much to do for improvement
	
	time   seconds   seconds    calls  us/call  us/call  name    
	86.00      0.55     0.55  2502500     0.22     0.22  f_output(float, hypothesis*, float*)
	9.38      0.61     0.06   100000     0.60     0.60  replace_subnode_with(hypothesis*, hypothesis*, int, hypothesis*)
	3.13      0.63     0.02   100100     0.20     5.70  compute_likelihood(int, float*, float*, float*, hypothesis*, float*)
	1.56      0.64     0.01   969060     0.01     0.01  random_op(int&, int&, int&, int&)
	0.00      0.64     0.00  2502500     0.00     0.00  lnormalpdf(float, float)
	0.00      0.64     0.00   100100     0.00     5.70  compute_posterior(int, float*, float*, float*, hypothesis*, float*)
	0.00      0.64     0.00   100100     0.00     0.10  random_closed_expression(hypothesis*, int&, int&, int&, int&)
	0.00      0.64     0.00   100100     0.00     0.00  compute_length_and_proposal_generation_lp(hypothesis*)
	0.00      0.64     0.00   100000     0.00     0.00  replace_random_subnode_with(hypothesis*, hypothesis*, hypothesis*, int&, int&, int&,